set nocompatible              " be iMproved, required
filetype off                  " required

" Vundle 
" set the runtime path to include Vundle and initialize

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
" Plugin 'Valloric/YouCompleteMe'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'itchyny/lightline.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'preservim/nerdtree'
Plugin 'will133/vim-dirdiff'

call vundle#end()            " required
filetype plugin indent on    " required

" dirdiff settings
set t_Co=256
hi DiffAdd       ctermfg=0	ctermbg=41	cterm=NONE
hi DiffChange    ctermfg=0	ctermbg=38	cterm=NONE
hi DiffDelete    ctermfg=0	ctermbg=167	cterm=NONE
hi DiffText      ctermfg=16	ctermbg=221	cterm=NONE

" remember last position
if has("autocmd")
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
                \| exe "normal! g'\"" | endif
endif

" persistent undo
set undodir=~/.vim/undodir
set undofile

" search settings
set ignorecase
set hlsearch
hi Search ctermbg=44
map <Space> :noh<cr>

syntax on
set nu
set backspace=2

" Normal settings
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab

" c.vim
let g:c_repo_whitelist = ['workplace/percpu', 'workplace/drgn']

set showtabline=2

" pane management
set splitbelow
set splitright

noremap <C-w>-  :sp<CR>
noremap <C-w><bar>  :vsp<CR>

" go to tab by number
nnoremap <C-t>    :tabnew<CR>
noremap g1 1gt
noremap g2 2gt
noremap g3 3gt
noremap g4 4gt
noremap g5 5gt
noremap g6 6gt
noremap g7 7gt
noremap g8 8gt
noremap g9 9gt
noremap g0 :tablast<cr>

" terminal
nnoremap <C-w>t :terminal<CR>

" ycm
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_key_list_stop_completion = ['<C-y>', '<Enter>']

nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>
nnoremap <F6> :YcmRestartServer<CR>
nnoremap <leader>h :YcmShowDetailedDiagnostic<CR>
nnoremap <leader>gt :YcmCompleter GoTo<CR>
nnoremap <leader>fi :YcmCompleter FixIt<CR>
nnoremap <leader>gd :YcmCompleter GetDoc<CR>
nnoremap <leader>gtp :YcmCompleter GetType<CR>
nnoremap <leader>gp :YcmCompleter GetParent<CR>
nnoremap <leader>gti :YcmCompleter GoToInclude<CR>
nnoremap <leader>gdf :YcmCompleter GoToDefinition<CR>
nnoremap <leader>gdc :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>yd :YcmDiags<CR>
nmap <leader>c <plug>(YCMHover)

" ctrlp
let g:ctrlp_working_path_mode = 'c'

" nerdtree
map <C-n> :NERDTreeToggle<CR>
let NERDTreeQuitOnOpen = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeMapOpenSplit = '-'
let NERDTreeMapOpenVSplit = '<bar>'

" lightline
set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'solarized'
      \ }
